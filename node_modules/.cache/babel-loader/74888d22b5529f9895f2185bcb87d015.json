{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saidi\\\\Desktop\\\\Spigot\\\\spigot-assigment\\\\react-order-management\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport OrderHeading from \"./OrderHeading\";\nimport OrderTiles from \"./OrderTiles\";\nimport PackageFilter from \"./PackageFilter\";\nimport Footer from \"./Footer\";\nimport \"./App.css\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSearch = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n    this.resultSearch = event => {\n      console.log(event.target.value.substring(0, 30), \"this is my input\");\n      this.setState({\n        search: event.target.value\n      });\n      let result = this.state.work_orders.orders.filter(workOrder => {\n        if (workOrder.id === event.target.value) {\n          return workOrder;\n        }\n      });\n      console.log(result[0], \"This is my result \");\n      console.log(result[0].name, \"This is my result name\");\n      this.setState({\n        filter_workOrder: result[0].name\n      });\n      //console.log(this.state.work_orders.orders, \"work ordersds!!!!\");\n      console.log(this.state.filter_workOrder, \"Filter****************\");\n    };\n    this.state = {\n      work_orders: [],\n      filter_workOrder: [],\n      worker: \"\",\n      work_by_order: 0,\n      search: \"\",\n      isFetching: true\n    };\n\n    // Start of state being called from json files using fetch to simulate if I did not have files on hand.\n    // fetch requests made here for all the data needed for the page, a loading screen will be shown until all the data loading has been dealt with sequentially thanks to promises\n    // isFetching is lastely changed so that page is all loaded so there won't be any errors with state not being loaded yet.\n\n    fetch(\"/json/work_orders.json\").then(res => res.json()).then(data => {\n      let dataArray = [data];\n      dataArray[0].orders.sort((a, b) => a.deadline - b.deadline);\n      this.setState({\n        work_orders: dataArray[0]\n      });\n    }).then(() => stateUpdate2());\n    let stateUpdate2 = () => {\n      fetch(\"/json/worker.json\").then(res => res.json()).then(data => this.setState({\n        worker: data,\n        isFetching: false\n      }));\n    };\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stickyFooterWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.state.isFetching ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loadingScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(OrderHeading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      id: \"controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PackageFilter, {\n      onClick: this.resultSearch.bind(this),\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      id: \"ordersContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, this.state.work_orders.orders.map(orders => /*#__PURE__*/React.createElement(OrderTiles, {\n      key: orders.id,\n      \"data-workername\": this.state.worker[orders.workerId].worker.name,\n      orderId: orders.id,\n      workOrderName: orders.name,\n      workOrderDescription: orders.description,\n      workOrderAmount: orders.amount,\n      workOrderworkerId: orders.workerId,\n      employeeImage: this.state.worker[orders.workerId].worker.image,\n      employeeName: this.state.worker[orders.workerId].worker.name,\n      employeecontact: this.state.worker[orders.workerId].worker.contact,\n      employeeEmail: this.state.worker[orders.workerId].worker.email,\n      deadline: orders.deadline,\n      search: this.state.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\n// Render to index.html\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","OrderHeading","OrderTiles","PackageFilter","Footer","App","Component","constructor","props","updateSearch","event","setState","search","target","value","resultSearch","console","log","substring","result","state","work_orders","orders","filter","workOrder","id","name","filter_workOrder","worker","work_by_order","isFetching","fetch","then","res","json","data","dataArray","sort","a","b","deadline","stateUpdate2","render","bind","map","workerId","description","amount","image","contact","email","document","getElementById"],"sources":["C:/Users/saidi/Desktop/Spigot/spigot-assigment/react-order-management/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport OrderHeading from \"./OrderHeading\";\r\nimport OrderTiles from \"./OrderTiles\";\r\nimport PackageFilter from \"./PackageFilter\";\r\nimport Footer from \"./Footer\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      work_orders: [],\r\n      filter_workOrder:[],\r\n      worker: \"\",\r\n      work_by_order: 0,\r\n      search: \"\",\r\n      isFetching: true\r\n    };\r\n\r\n    // Start of state being called from json files using fetch to simulate if I did not have files on hand.\r\n    // fetch requests made here for all the data needed for the page, a loading screen will be shown until all the data loading has been dealt with sequentially thanks to promises\r\n    // isFetching is lastely changed so that page is all loaded so there won't be any errors with state not being loaded yet.\r\n\r\n    fetch(\"/json/work_orders.json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let dataArray = [data];\r\n        dataArray[0].orders.sort(\r\n          (a, b) => a.deadline - b.deadline\r\n        );\r\n        this.setState({ work_orders: dataArray[0] });\r\n      })\r\n      .then(() => stateUpdate2());\r\n\r\n    let stateUpdate2 = () => {\r\n      fetch(\"/json/worker.json\")\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({ worker: data, isFetching: false }));\r\n    };\r\n  }\r\n  updateSearch = (event) => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  resultSearch = (event) => {\r\n    console.log(event.target.value.substring(0, 30), \"this is my input\");\r\n    this.setState({ search: event.target.value });\r\n    let result = this.state.work_orders.orders.filter((workOrder)=>{\r\n      if(workOrder.id ===event.target.value){\r\n        return workOrder\r\n      }\r\n    })\r\n    console.log( result[0],\"This is my result \")\r\n    console.log( result[0].name,\"This is my result name\")\r\n    this.setState({filter_workOrder:result[0].name})\r\n    //console.log(this.state.work_orders.orders, \"work ordersds!!!!\");\r\n    console.log(this.state.filter_workOrder, \"Filter****************\");\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"stickyFooterWrapper\">\r\n          {this.state.isFetching ? (\r\n            <div id=\"loadingScreen\">\r\n              <p>Loading...</p>\r\n            </div>\r\n          ) : (\r\n            <React.Fragment>\r\n              <OrderHeading />\r\n              <section id=\"controls\">\r\n                <PackageFilter\r\n                  onClick={this.resultSearch.bind(this)}\r\n                  value={this.state.search}\r\n                  onChange={this.updateSearch.bind(this)}\r\n                />\r\n               \r\n              </section>\r\n              <section id=\"ordersContainer\">\r\n                {this.state.work_orders.orders.map((orders) => (\r\n                  <OrderTiles\r\n                    key={orders.id}\r\n                    data-workername={\r\n                      this.state.worker[orders.workerId].worker.name\r\n                    }\r\n                    orderId={orders.id}\r\n                    workOrderName={orders.name}\r\n                    workOrderDescription={orders.description}\r\n                    workOrderAmount={orders.amount}\r\n                    workOrderworkerId={orders.workerId}\r\n                    employeeImage={\r\n                      this.state.worker[orders.workerId].worker.image\r\n                    }\r\n                    employeeName={\r\n                      this.state.worker[orders.workerId].worker.name\r\n                    }\r\n                    employeecontact={\r\n                      this.state.worker[orders.workerId].worker.contact\r\n                    }\r\n                    employeeEmail={\r\n                      this.state.worker[orders.workerId].worker.email\r\n                    }\r\n                    deadline={orders.deadline}\r\n                    search={this.state.search}\r\n                  />\r\n                ))}\r\n              </section> \r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// Render to index.html\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}